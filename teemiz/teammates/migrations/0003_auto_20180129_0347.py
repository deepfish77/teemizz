# Generated by Django 2.0 on 2018-01-29 01:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('teemizone', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teammates', '0002_auto_20180126_2109'),
    ]

    operations = [
        migrations.CreateModel(
            name='TeamPositions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('accepted_teammate', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accepted', to=settings.AUTH_USER_MODEL)),
                ('candidates', models.ManyToManyField(blank=True, related_name='profession_candidates', to=settings.AUTH_USER_MODEL)),
                ('industry', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='teemizone.Industry')),
                ('profession', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='teemizone.Profession')),
                ('responsibilities', models.ManyToManyField(blank=True, to='teammates.Responsibilities')),
                ('tags', models.ManyToManyField(blank=True, to='teemizone.Tag')),
                ('what_we_need', models.ManyToManyField(blank=True, to='teammates.WhatWeNeed')),
            ],
        ),
        migrations.RemoveField(
            model_name='teamrequiredprofession',
            name='accepted_teammate',
        ),
        migrations.RemoveField(
            model_name='teamrequiredprofession',
            name='candidates',
        ),
        migrations.RemoveField(
            model_name='teamrequiredprofession',
            name='industry',
        ),
        migrations.RemoveField(
            model_name='teamrequiredprofession',
            name='profession',
        ),
        migrations.RemoveField(
            model_name='teamrequiredprofession',
            name='responsibilities',
        ),
        migrations.RemoveField(
            model_name='teamrequiredprofession',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='teamrequiredprofession',
            name='what_we_need',
        ),
        migrations.RemoveField(
            model_name='team',
            name='members',
        ),
        migrations.RemoveField(
            model_name='team',
            name='team_jobs',
        ),
        migrations.AlterField(
            model_name='jobreview',
            name='related_job',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teammates.TeamPositions'),
        ),
        migrations.AlterField(
            model_name='team',
            name='industry',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='teemizone.Industry'),
        ),
        migrations.AlterField(
            model_name='team',
            name='summary',
            field=models.TextField(blank=True, default=None),
        ),
        migrations.AlterField(
            model_name='team',
            name='tags',
            field=models.ManyToManyField(blank=True, default=None, to='teemizone.Tag'),
        ),
        migrations.AlterField(
            model_name='team',
            name='type',
            field=models.CharField(blank=True, choices=[('S', 'Student'), ('G', 'Graduate'), ('J', 'Junior'), ('I', 'Intermediate'), ('P', 'Professional'), ('M', 'Mixed')], default=None, max_length=20),
        ),
        migrations.DeleteModel(
            name='TeamRequiredProfession',
        ),
        migrations.AddField(
            model_name='team',
            name='team_positions',
            field=models.ManyToManyField(to='teammates.TeamPositions'),
        ),
    ]
